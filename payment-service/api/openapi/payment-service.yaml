openapi: 3.0.1
info:
  title: Payment Service
  version: "1.0"
servers:
  - url: http://localhost:8080
paths:
  /api/v1/payment:
    post:
      summary: Создать платеж
      operationId: Create
      tags:
        - Payment Service API
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePaymentRequest"
      responses:
        "200":
          description: Информация по конкретному платежу
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentInfo"
        "400":
          description: Некорректные данные платежа
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationErrorResponse"

  /api/v1/payment/{paymentUid}:
    get:
      summary: Информация по платежу
      operationId: Get
      tags:
        - Payment Service API
      parameters:
        - name: paymentUid
          in: path
          description: UUID платежа
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Информация по конкретному платежу
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentInfo"
        "404":
          description: Платеж не найден
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

    delete:
      summary: Отмена платежа
      operationId: Cancel
      tags:
        - Payment Service API
      parameters:
        - name: paymentUid
          in: path
          description: UUID платежа
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Платеж успешно отменен
        "404":
          description: Платеж не найден
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /manage/health:
    get:
      summary: Liveness probe
      operationId: Live
      responses:
        "200":
          description: Сервис работает

components:
  schemas:
    PaymentInfo:
      type: object
      example:
        {
          "paymentUid": "238c733c-fb1e-40a9-aadb-73cb8f90675d",
          "status": "PAID",
          "price": 10500,
        }
      required:
        - paymentUid
        - status
        - price
      properties:
        paymentUid:
          type: string
          format: uuid
          description: UUID платежа
        status:
          type: string
          description: Статус платежа
          enum:
            - PAID
            - CANCELED
        price:
          type: integer
          description: Сумма платежа

    CreatePaymentRequest:
      type: object
      required:
        - price
      properties:
        price:
          type: integer
          description: Сумма платежа

    ErrorResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          description: Информация об ошибке

    ErrorDescription:
      type: object
      required:
        - field
        - error
      properties:
        field:
          type: string
        error:
          type: string

    ValidationErrorResponse:
      type: object
      required:
        - message
        - errors
      properties:
        message:
          type: string
          description: Информация об ошибке
        errors:
          type: array
          description: Массив полей с описанием ошибки
          items:
            $ref: "#/components/schemas/ErrorDescription"
